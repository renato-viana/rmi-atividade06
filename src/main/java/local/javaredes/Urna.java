package local.javaredes;

import java.awt.GridLayout;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author Renato Borges Viana
 */
public class Urna extends javax.swing.JFrame {

    private final Map<Integer, String> candidatos = new HashMap<>();

    /**
     * Creates new form Urna
     */
    public Urna() {
        initComponents();
        inicializarCandidatos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButtonCadastrar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxCandidatos = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldQtdVotos = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButtonEnviar = new javax.swing.JButton();
        jButtonEncerrar = new javax.swing.JButton();
        jTextFieldSucesso = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("Urna Eletrônica");

        jButtonCadastrar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButtonCadastrar.setText("Cadastro de candidatos");
        jButtonCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCadastrarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Urna Java");

        jComboBoxCandidatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCandidatosActionPerformed(evt);
            }
        });

        jLabel3.setText("Selecione o Candidato:");

        jLabel4.setText("Quantidade de votos:");

        jButtonEnviar.setText("Enviar ao Servidor Central");
        jButtonEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEnviarActionPerformed(evt);
            }
        });

        jButtonEncerrar.setText("Encerrar esta Urna");
        jButtonEncerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEncerrarActionPerformed(evt);
            }
        });

        jTextFieldSucesso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSucessoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                            .addComponent(jButtonCadastrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxCandidatos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldQtdVotos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonEnviar)
                            .addComponent(jButtonEncerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldSucesso, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(35, 35, 35)
                .addComponent(jLabel2)
                .addGap(20, 20, 20)
                .addComponent(jButtonCadastrar)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxCandidatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldQtdVotos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 213, Short.MAX_VALUE)
                .addComponent(jButtonEnviar)
                .addGap(20, 20, 20)
                .addComponent(jTextFieldSucesso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jButtonEncerrar)
                .addGap(50, 50, 50))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCadastrarActionPerformed
        cadastrarCandidato();
    }//GEN-LAST:event_jButtonCadastrarActionPerformed

    private void jTextFieldSucessoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSucessoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSucessoActionPerformed

    private void jButtonEncerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEncerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonEncerrarActionPerformed

    private void jComboBoxCandidatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCandidatosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxCandidatosActionPerformed

    private void jButtonEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEnviarActionPerformed
        jTextFieldSucesso.setText("");

        String qtdVotosStr = jTextFieldQtdVotos.getText().trim();
        if (qtdVotosStr.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor, preencha o campo quantidade de votos.");
            return;
        }
        if (!qtdVotosStr.matches("\\d+")) {
            JOptionPane.showMessageDialog(null, "Por favor, insira apenas números no campo quantidade de votos.");
            jTextFieldQtdVotos.setText("");
            return;
        }

        enviarDados();
    }//GEN-LAST:event_jButtonEnviarActionPerformed

    private void cadastrarCandidato() {
        JPanel panel = new JPanel(new GridLayout(0, 1));
        JTextField fieldNome = new JTextField();
        JTextField fieldNumeroChapa = new JTextField();
        panel.add(new JLabel("Digite o nome do candidato:"));
        panel.add(fieldNome);
        panel.add(new JLabel("Digite o número da chapa do candidato:"));
        panel.add(fieldNumeroChapa);
        int result = JOptionPane.showConfirmDialog(null, panel, "Cadastro de Candidato",
                JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
        if (result == JOptionPane.OK_OPTION) {
            String nome = fieldNome.getText();
            String numeroChapaStr = fieldNumeroChapa.getText();
            if (nome == null || nome.trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Por favor, preencha o nome do candidato.");
                return;
            }
            if (numeroChapaStr == null || !numeroChapaStr.matches("\\d+")) {
                JOptionPane.showMessageDialog(null, "Por favor, preencha o número da chapa com um número válido.");
                return;
            }
            int numeroChapa = Integer.parseInt(numeroChapaStr);
            if (candidatos.containsKey(numeroChapa)) {
                JOptionPane.showMessageDialog(null, "Número da chapa já está em uso.");
                return;
            }
            candidatos.put(numeroChapa, nome);
            atualizarCandidatos();
            JOptionPane.showMessageDialog(null, "Candidato cadastrado com sucesso!");
        } else {
            System.out.println("Cadastro cancelado");
        }
    }

    private void atualizarCandidatos() {
        List<String> candidatosFormatados = new ArrayList<>();
        for (Map.Entry<Integer, String> entry : candidatos.entrySet()) {
            candidatosFormatados.add(entry.getKey() + " - " + entry.getValue());
        }
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>(candidatosFormatados.toArray(new String[0]));
        jComboBoxCandidatos.setModel(model);
        jComboBoxCandidatos.setSelectedIndex(0);
    }

    private void enviarDados() {
        try {
            Registry servidorRegistro = LocateRegistry.getRegistry("127.0.0.1", 1099);
            Eleicao stub = (Eleicao) servidorRegistro.lookup("eleicaoRmi");

            String itemSelecionado = (String) jComboBoxCandidatos.getSelectedItem();
            String[] partes = itemSelecionado.split(" - ");
            int numeroChapa = Integer.parseInt(partes[0].trim());
            String nome = partes[1].trim();

            stub.enviarDadosCandidato(new Candidato(nome, numeroChapa, Integer.parseInt(jTextFieldQtdVotos.getText())));

            jTextFieldSucesso.setText("Dados enviado com sucesso!");

        } catch (RemoteException ex) {
            JOptionPane.showMessageDialog(null, "Não foi possível conectar ao servidor. Por favor, verifique se o servidor está rodando e tente novamente.");
        } catch (NotBoundException ex) {
            Logger.getLogger(Urna.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void inicializarCandidatos() {
        candidatos.put(1, "Renato Borges Viana");
        candidatos.put(2, "Ana Guimarães");
        candidatos.put(3, "Pedro Alencar");
        candidatos.put(4, "Amanda Beatriz Viana");

        // Cria uma lista para armazenar as strings formatadas
        List<String> candidatosFormatados = new ArrayList<>();

        // Itera sobre o mapa de candidatos
        for (Map.Entry<Integer, String> entry : candidatos.entrySet()) {
            // Formata a string para "número - nome" e adiciona à lista
            candidatosFormatados.add(entry.getKey() + " - " + entry.getValue());
        }

        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>(candidatosFormatados.toArray(new String[0]));
        jComboBoxCandidatos.setModel(model);
        jComboBoxCandidatos.setSelectedIndex(0);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Urna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Urna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Urna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Urna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Urna().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCadastrar;
    private javax.swing.JButton jButtonEncerrar;
    private javax.swing.JButton jButtonEnviar;
    private javax.swing.JComboBox<String> jComboBoxCandidatos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextFieldQtdVotos;
    private javax.swing.JTextField jTextFieldSucesso;
    // End of variables declaration//GEN-END:variables
}
